--
-- Created by IntelliJ IDEA.
-- User: oleg
-- Date: 03.07.15
-- Time: 1:43
-- To change this template use File | Settings | File Templates.
--
local awful = require('awful')
local wibox = require('wibox')
local naughty = require('naughty')
local gears = require('gears')
local calendar = require("awful.widget.calendar_popup")

local panel = {}
local sound_timer = nil

local function play_sound()
    os.execute("paplay /usr/share/sounds/sound-icons/guitar-13.wav &")  -- –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∑–≤—É–∫–æ–≤–æ–º—É —Ñ–∞–π–ª—É
end

local function createBattery()
    local widget = wibox.widget.textbox()

    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    awful.widget.watch("acpi", 3, function(_, stdout)
--         local battery_status = stdout:match("(%a+), (%d+)%%")  -- –∏–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏ –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏
--         local status, charge, remaining_time = stdout:match("Battery %d+: (%a+), (%d+)%%, (%d+:%d+:%d+) remaining")

        local pattern = "Battery %d+: ([%a%s]+), (%d+)%%,?%s*([%d+:%d+:%d+]*)"
        --
        -- -- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∫ —Å—Ç—Ä–æ–∫–∞–º
        local status, charge, remaining_time = stdout:match(pattern)

        -- –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –±–∞—Ç–∞—Ä–µ–∏ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞—Ä—è–¥–∞
        widget:set_text(string.format("Battery: %s%%", charge))

        -- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –∑–∞—Ä—è–¥–∞:
        if status and charge then
            -- –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞—Ç–∞—Ä–µ–µ
            widget:set_text(string.format("Battery: %s%% (%s)", charge, status))

            -- –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞—Ä—è–¥–∞
            if status == "Charging" then
                widget:set_text(string.format("üîå %s%%", charge))
                if sound_timer then
                    sound_timer:stop()
                    sound_timer = nil
                end
            elseif tonumber(charge) <= 10 then
                widget:set_text(string.format("üîã Low: %s%%", charge))
                if not sound_timer then
                    sound_timer = gears.timer {
                        timeout = 5,  -- –ü–µ—Ä–∏–æ–¥ –¥–ª—è —Ü–∏–∫–ª–∏—á–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥)
                        autostart = true,
                        callback = play_sound
                    }
                end
            elseif tonumber(charge) < 50 then
                widget:set_text(string.format("üîã %s%%", charge))
                if sound_timer then
                    sound_timer:stop()
                    sound_timer = nil
                end
            else
                widget:set_text(string.format("üîã %s%%", charge))
                if sound_timer then
                    sound_timer:stop()
                    sound_timer = nil
                end
            end
        else
            widget:set_text("Battery: Unknown")
            if sound_timer then
                sound_timer:stop()
                sound_timer = nil
            end
        end
    end)

    widget:connect_signal("mouse::enter", function()
         local f = io.popen("acpi")
         local battery_info = f:read("*all")
         f:close()

         -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
         local status, charge, time = battery_info:match("Battery %d+: ([%a%s]+), (%d+)%%,?%s*([%d+:%d+:%d+]*)")
         local b_text = "Status: " .. status .. "\n" ..
              "Charge: " .. charge
          if not time then
            b_text = b_text .. "\n" .. "Time remaining: " .. time
          end

         naughty.notify({
            title = "Battery Info",
            text = b_text,
            timeout = 5  -- –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∏—Å—á–µ–∑–∞–µ—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        })
    end)

    return widget
end


panel.init = function()
    return {
        textClock = panel.createClock(),
        tagList = panel.createTagList(),
        taskList = panel.createTaskList(),
        battery = createBattery(),
    }
end


local function createCalendar(anchor)
      -- –ö–∞–ª–µ–Ω–¥–∞—Ä—å
      local mycalendar = awful.widget.calendar_popup.month({
          font = "monospace 10",     -- –®—Ä–∏—Ñ—Ç
          fg_normal = "#ffffff",     -- –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
          fg_focus = "#ff0000",      -- –¶–≤–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –¥–Ω—è
          bg_normal = "#333333",     -- –¶–≤–µ—Ç —Ñ–æ–Ω–∞
          bg_focus = "#444444",      -- –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –¥–Ω—è
          radius = 10,               -- –†–∞–¥–∏—É—Å —É–≥–ª–æ–≤
          spacing = 5,               -- –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–Ω—è–º–∏
          attach_to = {},            -- –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–Ω–∏–µ
          prev_month_button = wibox.widget {
              text = "<",           -- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
              widget = wibox.widget.textbox,
          },
          next_month_button = wibox.widget {
              text = ">",           -- –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞
              widget = wibox.widget.textbox,
          },
      })

   -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
   local calendar_visible = false
   local function toggle_calendar()
       if calendar_visible then
           mycalendar:toggle() -- –°–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
       else
           mycalendar:toggle() -- –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
       end
       calendar_visible = not calendar_visible
   end

   -- –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫ –∫–ª–∏–∫—É –ø–æ —á–∞—Å–∞–º
   anchor:connect_signal("button::press", function(_, _, _, button)
       if button == 1 then  -- –õ–µ–≤—ã–π –∫–ª–∏–∫
--            toggle_calendar()
       end
   end)

   mycalendar:attach(anchor, "tr", { on_hover = false })

end


panel.createClock = function()
    local clock = awful.widget.textclock()
--     local month_calendar = awful.widget.calendar_popup.month()
--     month_calendar:attach( clock, "tr" )
--     month_calendar:toggle()
    createCalendar(clock)
    return clock
end

panel.createTagList = function()
    local mytaglist = {}
    mytaglist.buttons = awful.util.table.join(
        awful.button({}, 1, awful.tag.viewonly),
        awful.button({modkey}, 1, awful.client.movetotag),
        awful.button({}, 3, awful.tag.viewtoggle)
    )
    return mytaglist
end

panel.createTaskList = function()
    local mytasklist = {}

    mytasklist.buttons = awful.util.table.join(
        awful.button({}, 1, function(c)
            if not (c == client.focus) then
                c.minimized = false
                if not c:isvisible() then
                    awful.tag.viewonly(c:tags()[1])
                end
                -- This will also un-minimize
                -- the client, if needed
                client.focus = c
                c:raise()
            end
        end),
        awful.button({}, 2, function(c)
            c:kill() --close window by scroll
        end),
        awful.button({}, 3, function()
            if instance then
                instance:hide()
                instance = nil
            else
                instance = awful.menu.clients({width = 250})
            end
        end)
    )
    return mytasklist
end

panel.createPromptBox = function()
    return awful.widget.prompt()
end

return panel

